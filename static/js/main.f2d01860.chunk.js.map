{"version":3,"sources":["assets/obama.png","assets/american-flag.png","assets/obama-sangen.mp3","components/menu/index.tsx","models/Obama.ts","Util.ts","components/game/GameCanvas.tsx","components/game/index.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Menu","this","props","history","push","Image","src","AmericanFlag","ObamaImg","className","onClick","handlePlay","Component","Obama","pos","acc","bound","dimensions","speed","x","y","w","h","randMinMax","min","max","Math","floor","random","rectContains","rect","left","right","top","bottom","setCanvasSize","canvas","wrapper","getBoundingClientRect","width","height","GameCanvas","React","createRef","canvasWrapper","obamaImg","americanFlag","obamaSong","Audio","ObamaSong","spawnInterval","updateInterval","obamas","obamaDimensions","obamaSpeed","mousePos","DOMPoint","state","gameOver","score","handleStartGame","console","log","loop","play","setState","window","requestAnimationFrame","updateObama","setInterval","spawnObama","handleGameOver","pause","currentTime","clearInterval","cancelAnimationFrame","onGameOver","drawObamas","current","ctx","getContext","clearRect","forEach","obama","drawImage","length","move","DOMRect","updateObamaDimensions","onload","onresize","onmousemove","e","evt","clientX","clientY","getMousePos","some","error","ref","style","backgroundImage","backgroundRepeat","backgroundSize","Game","playing","alt","handlePlayAgain","App","basename","process","exact","path","component","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.f2d01860.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/obama.1bb75a73.png\";","module.exports = __webpack_public_path__ + \"static/media/american-flag.8ced8f71.png\";","module.exports = __webpack_public_path__ + \"static/media/obama-sangen.17e3cc89.mp3\";","import React, { Component } from \"react\";\nimport { RouteComponentProps } from \"react-router-dom\";\nimport AmericanFlag from \"../../assets/american-flag.png\";\nimport ObamaImg from \"../../assets/obama.png\";\n\nclass Menu extends Component<RouteComponentProps> {\n  handlePlay(): void {\n    this.props.history.push(\"/play\");\n  }\n\n  componentDidMount(): void {\n    new Image().src = AmericanFlag;\n    new Image().src = ObamaImg;\n  }\n\n  render(): JSX.Element {\n    return (\n      <div>\n        <div className=\"container wrapper\">\n          <div className=\"center\">\n            <h1 className=\"font-weight-bold display-2 text-white\">\n              Vokt dem for Obama\n            </h1>\n            <button\n              onClick={() => this.handlePlay()}\n              className=\"btn btn-american-blue\"\n            >\n              <h2 className=\"font-weight-bold text-white\">Spill</h2>\n            </button>\n            <h3 className=\"font-weight-bold text-white\">\n              Hold musepekeren unna Obama\n            </h3>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Menu;\n","import Coordinate from \"./Coordinate\";\n\nimport Rect from \"./Rect\";\n\nexport default class Obama {\n  pos: Coordinate;\n  acc: Coordinate;\n\n  constructor(pos: Coordinate, acc: Coordinate) {\n    this.pos = pos;\n    this.acc = acc;\n  }\n\n  public move(bound: Rect, dimensions: Rect, speed = 1): void {\n    const x = this.pos.x + this.acc.x * speed;\n    const y = this.pos.y + this.acc.y * speed;\n    const { w, h } = dimensions;\n\n    if (x < 0 || x + w > bound.x + bound.w) {\n      this.acc.x = this.acc.x > 0 ? -1 : 1;\n    } else this.pos.x = x;\n\n    if (y < 0 || y + h > bound.y + bound.h) {\n      this.acc.y = this.acc.y > 0 ? -1 : 1;\n    } else this.pos.y = y;\n  }\n}\n","export const randMinMax = (min: number, max: number): number => {\n  return Math.max(min, Math.floor(Math.random() * max));\n};\n\nexport const getMousePos = (\n  canvas: HTMLCanvasElement,\n  evt: MouseEvent\n): DOMPoint => {\n  const rect = canvas.getBoundingClientRect();\n  return new DOMPoint(evt.clientX - rect.left, evt.clientY - rect.top);\n};\n\nexport const rectContains = (rect: DOMRect, pos: DOMPoint): boolean => {\n  return (\n    rect.left <= pos.x &&\n    rect.right >= pos.x &&\n    rect.top <= pos.y &&\n    rect.bottom >= pos.y\n  );\n};\n\nexport const setCanvasSize = (\n  canvas: HTMLCanvasElement,\n  wrapper: HTMLDivElement\n): void => {\n  const rect = wrapper.getBoundingClientRect();\n  if (rect) {\n    canvas.width = rect.width;\n    canvas.height = rect.height;\n  }\n};\n","import React, { Component } from \"react\";\nimport ObamaImg from \"../../assets/obama.png\";\nimport ObamaSong from \"../../assets/obama-sangen.mp3\";\nimport AmericanFlag from \"../../assets/american-flag.png\";\nimport Obama from \"../../models/Obama\";\nimport Rect from \"../../models/Rect\";\nimport {\n  randMinMax,\n  getMousePos,\n  rectContains,\n  setCanvasSize\n} from \"../../Util\";\n\ninterface IProps {\n  className: string;\n  onGameOver: (score: number) => void;\n}\n\ninterface IState {\n  gameOver: boolean;\n  score: number;\n}\n\nclass GameCanvas extends Component<IProps, IState> {\n  canvas = React.createRef<HTMLCanvasElement>();\n  canvasWrapper = React.createRef<HTMLDivElement>();\n  obamaImg = new Image();\n  americanFlag = new Image();\n\n  obamaSong = new Audio(ObamaSong);\n\n  spawnInterval: number | null = null;\n  updateInterval: number | null = null;\n  obamas: Obama[] = [];\n\n  obamaDimensions = { w: 50, h: 50 } as Rect;\n  obamaSpeed = 1;\n  mousePos = new DOMPoint();\n\n  state: Readonly<IState> = {\n    gameOver: false,\n    score: 0\n  };\n\n  componentDidMount(): void {\n    const { obamas, obamaImg, americanFlag, obamaDimensions } = this;\n    const canvas = this.canvas.current;\n    const canvasWrapper = this.canvasWrapper.current;\n\n    if (!canvas || !canvasWrapper) {\n      console.error(\"Failed to load references\");\n      return;\n    }\n\n    obamaImg.src = ObamaImg;\n\n    americanFlag.src = AmericanFlag;\n    americanFlag.onload = () => this.handleStartGame();\n\n    setCanvasSize(canvas, canvasWrapper);\n    this.updateObamaDimensions();\n\n    canvas.onresize = () => {\n      setCanvasSize(canvas, canvasWrapper);\n      this.updateObamaDimensions();\n\n      // this.drawObamas();\n    };\n\n    canvas.onmousemove = (e: MouseEvent) => {\n      const pos = (this.mousePos = getMousePos(canvas, e));\n\n      const hit = obamas.some((obama) => {\n        const rect = new DOMRect(\n          obama.pos.x,\n          obama.pos.y,\n          obamaDimensions.w,\n          obamaDimensions.h\n        );\n        return rectContains(rect, pos);\n      });\n      if (hit) this.handleGameOver();\n    };\n  }\n\n  componentWillUnmount(): void {\n    this.handleGameOver();\n  }\n\n  handleStartGame = (): void => {\n    console.log(\"start\");\n\n    const { obamaSong } = this;\n    obamaSong.loop = true;\n    obamaSong.play();\n    this.setState({ gameOver: false, score: 0 });\n    this.obamas = [];\n\n    this.updateInterval = window.requestAnimationFrame(this.updateObama);\n\n    this.spawnInterval = window.setInterval(this.spawnObama, 1000);\n  };\n\n  handleGameOver = (): void => {\n    this.obamaSong.pause();\n    this.obamaSong.currentTime = 0;\n    this.setState({ gameOver: true });\n\n    if (this.spawnInterval) window.clearInterval(this.spawnInterval);\n    if (this.updateInterval) window.cancelAnimationFrame(this.updateInterval);\n\n    this.props.onGameOver(this.state.score);\n  };\n\n  drawObamas = (): void => {\n    const canvas = this.canvas.current;\n    const {\n      obamaImg,\n      obamaDimensions: { w, h }\n    } = this;\n    if (!canvas) return;\n\n    const ctx = canvas.getContext(\"2d\");\n    if (!ctx) return;\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n    this.obamas.forEach((obama: Obama) => {\n      const { x, y } = obama.pos;\n      ctx.drawImage(obamaImg, x, y, w, h);\n    });\n  };\n\n  spawnObama = (): void => {\n    if (!this.canvas.current) return;\n    const { width, height } = this.canvas.current;\n    const { w, h } = this.obamaDimensions;\n\n    const x = randMinMax(w, width - w);\n    const y = randMinMax(h, height - h);\n    this.obamas.push(\n      new Obama(\n        { x, y },\n        { x: Math.random() < 0.5 ? 1 : -1, y: Math.random() < 0.5 ? 1 : -1 }\n      )\n    );\n    this.setState({ score: this.obamas.length });\n  };\n\n  updateObama = (): void => {\n    if (!this.canvas.current) return;\n    const { width: w, height: h } = this.canvas.current;\n\n    this.obamas.forEach((obama: Obama) => {\n      obama.move(\n        { x: 0, y: 0, w, h } as Rect,\n        {\n          w: this.obamaDimensions.w,\n          h: this.obamaDimensions.h\n        } as Rect,\n        this.obamaSpeed\n      );\n      const rect = new DOMRect(\n        obama.pos.x,\n        obama.pos.y,\n        this.obamaDimensions.w,\n        this.obamaDimensions.h\n      );\n      if (rectContains(rect, this.mousePos)) this.handleGameOver();\n    });\n    this.drawObamas();\n    if (!this.state.gameOver) window.requestAnimationFrame(this.updateObama);\n  };\n\n  updateObamaDimensions = (): void => {\n    console.log(this.canvas.current);\n\n    if (!this.canvas.current) return;\n\n    const { width } = this.canvas.current;\n    console.log(width);\n\n    if (width > 3500) {\n      this.obamaDimensions.w = 200;\n      this.obamaDimensions.h = 256;\n      this.obamaSpeed = 5;\n    } else if (width > 1200) {\n      this.obamaDimensions.w = 100;\n      this.obamaDimensions.h = 128;\n      this.obamaSpeed = 4;\n    } else if (width > 992) {\n      this.obamaDimensions.w = 60;\n      this.obamaDimensions.h = 77;\n      this.obamaSpeed = 3;\n    } else if (width > 768) {\n      this.obamaDimensions.w = 40;\n      this.obamaDimensions.h = 51;\n      this.obamaSpeed = 2;\n    } else if (width > 576) {\n      this.obamaDimensions.w = 20;\n      this.obamaDimensions.h = 26;\n      this.obamaSpeed = 2;\n    } else {\n      this.obamaDimensions.w = 10;\n      this.obamaDimensions.h = 13;\n      this.obamaSpeed = 2;\n    }\n    console.log(this.obamaDimensions);\n  };\n\n  render(): JSX.Element {\n    const { score } = this.state;\n    const { className } = this.props;\n    return (\n      <div\n        className={className}\n        ref={this.canvasWrapper}\n        style={{ width: \"80%\", height: \"80%\" }}\n      >\n        <canvas\n          className=\"border border-white\"\n          ref={this.canvas}\n          style={{\n            backgroundImage: `url(${this.americanFlag.src})`,\n            backgroundRepeat: \"no-repeat\",\n            backgroundSize: \"cover\"\n          }}\n        ></canvas>\n        <div className=\"d-flex text-white text-bold\">\n          <div className=\"display-2 mx-auto\">{score}</div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default GameCanvas;\n","import React, { Component } from \"react\";\nimport GameCanvas from \"./GameCanvas\";\nimport ObamaImg from \"../../assets/obama.png\";\n\ninterface IProps {}\n\ninterface IState {\n  playing: boolean;\n  score: number;\n}\n\nclass Game extends Component {\n  state: Readonly<IState> = {\n    playing: true,\n    score: 0\n  };\n\n  handlePlayAgain(): void {\n    this.setState({ playing: true, score: 0 });\n  }\n\n  render(): JSX.Element {\n    const { playing, score } = this.state;\n    return (\n      <div className=\"h-100 mt-4\">\n        {playing ? (\n          <GameCanvas\n            className=\"mx-auto\"\n            onGameOver={(score) => this.setState({ playing: false, score })}\n          />\n        ) : (\n          <div className=\"wrapper\">\n            <div className=\"center\">\n              <img\n                className=\"mb-1\"\n                src={ObamaImg}\n                width=\"100\"\n                height=\"auto\"\n                alt=\"obama\"\n              />\n              <h1 className=\"font-weight-bold display-2 text-white\">\n                Spillet er over\n              </h1>\n\n              <h2 className=\"font-weight-bold text-american-blue mb-4\">\n                Antall Obamahoder før du tapte:\n              </h2>\n              <h2 className=\"font-weight-bold text-american-blue\">{score}</h2>\n              <button\n                onClick={() => this.handlePlayAgain()}\n                className=\"btn btn-american-blue\"\n              >\n                <h2 className=\"font-weight-bold text-white\">Spill igjen</h2>\n              </button>\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default Game;\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Menu from \"./components/menu\";\nimport Game from \"./components/game\";\n\nclass App extends Component {\n  render(): JSX.Element {\n    return (\n      <Router basename={process.env.PUBLIC_URL}>\n        <Switch>\n          <Route exact path=\"/\" component={Menu}></Route>\n          <Route exact path=\"/play\" component={Game}></Route>\n        </Switch>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config): void {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config): void {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config): void {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" }\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister(): void {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}